

ffmpeg -i ../stream_conditioner/app/test.ts -c:v libx264 -x264opts keyint=25:min-keyint=25:scenecut=-1 -acodec copy -streamid 0:2064 -streamid 0:2068 -g 25 -vb 1800k -acodec copy ../stream_conditioner/app/test_2mbps.ts


# For concatenating files
ffmpeg -i "concat:ott_test.ts|ott_test.ts|ott_test.ts|ott_test.ts|ott_test.ts" -vcodec copy -acodec copy new_1hr_ott_test.ts

# Add time code
ffmpeg -i "concat:1_NHCTV018020014A01.ts|M2_EQI-NAFO002-030.ts|3_NHCTV018020014A01.ts|M1_DLK-MOMM622-030.ts|4_NHCTV018020014A01.ts|M2_EQI-NAFO002-030.ts" -acodec copy -vf "drawtext=fontsize=72:fontfile=/usr/share/fonts/truetype/freefont/FreeMono.ttf:timecode='00\:00\:00\:00':rate=25:fontcolor='white':boxcolor=0x000000AA:box=1:x=(w-tw)/4: y=h-(2*lh)" -vb 6000000 1.ts


# Setting pes_payload_size to a low value 16 which will ensure tha even for audio every pes will have only one audio frame worths data
ffmpeg -i NHCTV018020014A01.ts -bf 2 -vcodec h264 -vb 6000000 -acodec copy -f mpegts -pes_payload_size 16 -t 180 1_NHCTV018020014A01.ts

#Another example of concatenation
ffmpeg -f concat -i concat_test.txt -acodec copy -vf "drawtext=fontsize=72:fontfile=/usr/share/fonts/truetype/freefont/FreeMono.ttf:timecode='00\:00\:00\:00':rate=25:fontcolor='white':boxcolor=0x000000AA:box=1:x=(w-tw)/4: y=h-(2*lh)" -vb 6000000  1.ts


# For separating audio channels
ffmpeg -i stereo.wav -map_channel 0.0.0 left.wav -map_channel 0.0.1 right.wav


# Covert 8 mono tracks in mxf to 4 stereo pairs
ffmpeg -i Seg1_8Ch_03Sec.mxf -map 0:0 -filter_complex "[0:1][0:2]amerge=inputs=2[aout0]" -map "[aout0]"  -filter_complex "[0:3][0:4]amerge=inputs=2[aout1]" -map "[aout1]"  -filter_complex "[0:5][0:6]amerge=inputs=2[aout2]" -map "[aout2]"  -filter_complex "[0:7][0:8]amerge=inputs=2[aout3]" -map "[aout3]" -vcodec copy  out.mxf


MP$Box command to export a ts file to mp4 file format
MP4Box -add tit.ts new_file.mp4


# The following command changes the input field order when input is DVPAL(bff) to tff and then encodes.
ffmpeg -i HS111151B_MorningShow.mov -vf "fieldorder=tff" -map 0:v -map 0:a:0 -acodec libfdk_aac -ac 2 -flags +ilme+ildct -copyts -ar 48000 -ab 320k -vcodec h264 -pix_fmt yuv420p -bf 2 -profile:v high -vb 5000000 -g 13 -streamid 0:2064 -streamid 1:2068 -x264opts tff=1 SFFMPEG_HS111151B_MorningShow.ts

# Split input stereo audio in mxf file to have 2 output mono audio tracks.
ffmpeg -i ZF29470.mxf -filter_complex "[0:1]pan=1c|c0=c0[left];[0:1]pan=1c|c0=c1[right]" -map 0:v -map "[left]" -map "[right]" -vcodec copy -acodec pcm_s16le Z.mxf


# Split stereo to two monos and mux them into a single file as two seprate mono tracks
ffmpeg -i "$op_mov" -map_channel 0.1.0 L.wav -map_channel 0.1.1 R.wav
ffmpeg -i "$ip_mxf" -i L.wav  -i R.wav -map 0:0 -c:v mpeg2video -map 1:0 -acodec pcm_s24le -map 2:0 -acodec pcm_s24le "$op_mxf"


# Command for lossless H264 encoding
ffmpeg -i new_pal_to_ntsc_out1.mov -vcodec libx264 -crf 0 -acodec copy -aspect 4:3 n1.mov


# Remux Mp4 file containing H264 to ts
ffmpeg -i "CR4.mp4" -vbsf h264_mp4toannexb -pes_payload_size 16 -vcodec copy -acodec copy -streamid 0:2064 -streamid 1:2068 ~/CR4.ts




# Barcoding Mxf files with 8 monos where each pair is a unique pid.

Following command merges first two mono tracks in input mxf to create a single output stereo track.

ffmpeg -i SFLLDOMI360.mxf -vcodec copy -map 0:0 -filter_complex "[0:1][0:2]amerge=inputs=2[aout0]" -map "[aout0]" -acodec pcm_s24le   SFLLDOMI360_To_Barcode.mov

Barcode the above generated mov file and get the barcoded output say WM_SFLLDOMI360_To_Barcode.mov.

Now create the output file to be shared back with Scipps as follows. The following splits the stereo in mov and puts it as first 2 mono channels in output mxf.

ffmpeg -i SFLLDOMI360.mxf  -i WM_SFLLDOMI360_To_Barcode.mov  -map 0:0  -vcodec copy -filter_complex '[1:a]channelsplit=channel_layout=stereo[L][R]' -map '[L]' -map '[R]' -map 0:2 -map 0:3 -map 0:4 -map 0:5 -map 0:6 -map 0:7 -acodec pcm_s24le   TO_SCRIPPS_SFLLDOMI360.mxf




# Barcoding files whoch have mulitiple channels e.g. 8 channels in single track

1. Split the input audio into 8 separate tracks
ffmpeg -i TKDPK174738.mxf -vcodec copy -filter_complex '[0:a]channelsplit=channel_layout=7.1[FL][FR][FC][LFE][BL][BR][SL][SR]' -acodec pcm_s16le -map 0:0 -map "[FL]" -map "[FR]" -map "[FC]" -map "[LFE]" -map "[BL]" -map "[BR]" -map "[SL]" -map [SR] t.mov

2. Merge every pair to get 4 streo tracks
ffmpeg -i t.mov -vcodec copy -map 0:0 -filter_complex "[0:1][0:2]amerge=inputs=2[aout0]" -acodec pcm_s16le -filter_complex "[0:1][0:2]amerge=inputs=2[aout1]" -filter_complex "[0:5][0:6]amerge=inputs=2[aout2]" -filter_complex "[0:7][0:8]amerge=inputs=2[aout3]" -map "[aout0]" -map "[aout1]" -map "[aout2]" -map "[aout3]" t1.mov

3. Barcode t1.mov

4. ffmpeg -i t1.mov -vcodec copy -map 0:0 -filter_complex "[0:1][0:2][0:3][0:4]amerge=inputs=4[aout1]" -acodec pcm_s16le -map "[aout1]" t1_amerge.mxf





# Audio normalization usin loudnorm filter. Dependency libebur128

./ffmpeg -i /home2/sb_media/tmp/tuff/high_UM171_4.ts -af loudnorm=I=-24:TP=-2 -vcodec copy ffmpeg_high_UM171.ts





# Copying unknow data pid to the output

ffmpeg -i Sentry5-HD2PROD-FUT2-12HD-TriggeredByUser-20161104-134548-00-c10.ts -map 0:0 -map 0:3 -map 0:4 -acodec copy -vcodec copy -codec copy -copy_unknown  Pappu.ts






# Crop scale and convert from 1080i50 to PAL

ffmpeg -i EKP012199.mxf -vf "crop=1440:1080:240:0,scale=720:576,w3fdif,scale=720:576:interl=0:in_color_matrix=bt709:out_color_matrix=bt601,tinterlace=4:flags=vlpf" -aspect 4:3 -r 25 -acodec copy -y -vb 20000k SH_EKP012199.mxf





#Encoding input MXF for Z3
ffmpeg -i EKP012199.mxf -vf "crop=1440:1080:240:0,scale=720:576" -filter_complex "[0:1][0:2]amerge=inputs=2[aout0]" -map 0:0 -map "[aout0]" -aspect 4:3 -r 25 -acodec libfdk_aac -y -vcodec h264 -pix_fmt yuv420p -bf 2 -vb 8000k -streamid 0:2064 -streamid 1:2068 -pes_payload_size 16 1SH_EKP012199.ts





#SCRIPPS Barcoding of MXF

-> Convert 12 mono to 6 stereo

ffmpeg -i AB0000032.mxf -vcodec copy -map 0:0 -filter_complex "[0:1][0:2]amerge=inputs=2[aout0]" -filter_complex "[0:3][0:4]amerge=inputs=2[aout1]"  -filter_complex "[0:5][0:6]amerge=inputs=2[aout2]" -filter_complex "[0:7][0:8]amerge=inputs=2[aout3]" -filter_complex "[0:9][0:10]amerge=inputs=2[aout4]"  -filter_complex "[0:11][0:12]amerge=inputs=2[aout5]" -map "[aout0]" -map "[aout1]" -map "[aout2]" -map "[aout3]" -map "[aout4]" -map "[aout5]" -acodec pcm_s24le AB0000032_STEREO.mov


Following is incomplete. To be done
ffmpeg -i AB0000032_STEREO_1300.mov -map 0:0  -vcodec copy -filter_complex '[0:1]channelsplit=channel_layout=stereo[L1][R1]' -filter_complex '[0:2]channelsplit=channel_layout=stereo[L2][R2]' -filter_complex '[0:3]channelsplit=channel_layout=stereo[L3][R3]' -filter_complex '[0:4]channelsplit=channel_layout=stereo[L4][R4]' -filter_complex '[0:5]channelsplit=channel_layout=stereo[L5][R5]' -filter_complex '[0:6]channelsplit=channel_layout=stereo[L6][R6]' -map '[L1]' -map '[R1]' -map '[L2]' -map '[R2]' -map '[L3]' -map '[R3]' -map '[L4]' -map '[R4]' -map '[L5]' -map '[R5]' -map '[L6]' -map '[R6]' -acodec pcm_s24le AB0000032_STEREO_1300.mxf




# Command to add frame number at the bottom right corner
ffmpeg -i IH_PA_SCDKNGHTME_02.ts -ss 184.960 -s 320x256 -t 60 -vf "drawtext=fontsize=24:fontfile=/usr/share/fonts/truetype/freefont/FreeMono.ttf: text=%{n}: x=w-tw: y=h-lh: fontcolor=white" -acodec mp2 o.mov



# Create a jpeg image from a particular video frame

ffmpeg -ss 50 -i IH_PA_NJSPINDOTD_01.ts -t 0.040 -f image2 colorbar2.jpg



#Audio fade in fade out
ffmpeg -i chevy.wav -ss 10 -t 5 -af "afade=t=in:st=10:d=0.2,afade=t=out:st=14:d=1" tmp.wav


# FFmpeg command to convert HD to low resolution ML file
ffmpeg -i TE00000601_01_0001_A0_HD_HD_D_PV05.ts -vf yadif -s 480x270 -vcodec libx264 -acodec libfdk_aac -ab 192k -vb 1200000 -vf "drawtext=fontsize=60:fontfile=/usr/share/fonts/truetype/freefont/FreeMono.ttf: text=%{n}: x=w-tw: y=h-lh: fontcolor=white" 480x270_TE00000601_01_0001_A0_HD_HD_D_PV05.mov

